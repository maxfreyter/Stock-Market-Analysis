### Project Overview

**Project Title**: **Stock Market Analysis (2014-2017)**

**Objective**: 
The goal of this project is to conduct a comprehensive analysis of stock market data from 2014 to 2017. The analysis aims to identify trends, assess market behavior, and determine which stocks provided the best returns during this period. The project leverages SQL to explore the dataset, check for data quality issues, and extract key insights that would be valuable for investors or financial analysts.

### Business Task

**Task**: 
To analyze stock price data over a four-year period, focusing on identifying the best performing stocks, understanding trading volume patterns, and determining key volatility events. The results will help in making informed investment decisions and understanding market dynamics.

### Data Analysis Steps

1. **Data Overview and Quality Checks**:
    - **Date Range and Record Count**: 
        - Verified the dataset covers the period from January 2, 2014, to December 29, 2017, with a total of 497,472 records.
    - **Missing Values**:
        - Checked for missing values across key fields (`symbol`, `date`, `open`, `high`, `low`, `close`, and `volume`).
        - Found that 11 records were missing values for `open`, `high`, and `low`, with 4 records showing 0 volume, indicating no trading activity on those days.
    - **Duplicate Records**:
        - Ensured data integrity by checking for duplicate records using a combination of `symbol` and `date`.

2. **Volume Analysis**:
    - **Highest Trading Volume Date**: 
        - Identified August 24, 2015, as the date with the highest overall trading volume.
    - **Top Traded Stocks on High-Volume Day**:
        - Determined that Bank of America (BAC) and Apple (AAPL) were the most traded stocks on this day.
    - **Trading Volume by Day of the Week**:
        - Analyzed trading volume trends throughout the week, revealing that Fridays had the highest average volume, indicating increased trading activity towards the end of the week.

3. **Volatility Analysis**:
    - **Amazon's Most Volatile Day**:
        - Discovered that Amazon (AMZN) experienced the highest volatility on June 9, 2017, with a $85.99 difference between its highest and lowest prices.

4. **Investment Analysis**:
    - **Best Performing Stocks**:
        - Calculated cumulative returns for each stock and found that NVIDIA (NVDA) had the highest return of approximately 1268% over the four-year period, making it the top-performing stock.

### Conclusion

This project provides a detailed analysis of stock market data, uncovering critical insights into trading volume patterns, stock volatility, and the best investment opportunities between 2014 and 2017. The findings, particularly the identification of NVIDIA as the best-performing stock, are valuable for potential investors looking to understand past market trends and make data-driven decisions.



To create a well-organized portfolio project on GitHub, you can structure your repository in the following way:

### Repository Structure

```
stock-market-analysis-2014-2017/
│
├── README.md
├── queries/
│   ├── data_quality_checks.sql
│   ├── volume_analysis.sql
│   ├── volatility_analysis.sql
│   └── investment_analysis.sql
├── results/
│   ├── data_overview_results.md
│   ├── volume_analysis_results.md
│   ├── volatility_analysis_results.md
│   └── investment_analysis_results.md
├── images/
│   └── any_charts_or_visualizations.png
└── docs/
    ├── project_overview.md
    └── business_task.md
```

### Step-by-Step Guide

1. **`README.md`**:
   - Provide a high-level summary of the project, including its purpose, how to navigate the repository, and how to reproduce the analysis. You can also add a link to the live project overview (`project_overview.md`).

2. **`queries/`**:
   - **`data_quality_checks.sql`**: 
     - Include all the SQL queries related to checking the date range, record count, missing values, and duplicates.
   - **`volume_analysis.sql`**:
     - Include SQL queries used to determine the highest trading volume date, top traded stocks, and volume trends by day of the week.
   - **`volatility_analysis.sql`**:
     - Include SQL queries for analyzing Amazon’s volatility.
   - **`investment_analysis.sql`**:
     - Include SQL queries used to calculate cumulative returns and identify the best-performing stocks.

3. **`results/`**:
   - **`data_overview_results.md`**:
     - Document the results from your data quality checks, including the date range, record count, and notes on missing values or duplicates.
   - **`volume_analysis_results.md`**:
     - Detail the findings from the volume analysis, including the highest trading volume date, the most traded stocks, and volume trends by day of the week.
   - **`volatility_analysis_results.md`**:
     - Summarize the volatility analysis, particularly highlighting Amazon’s most volatile day.
   - **`investment_analysis_results.md`**:
     - Present the investment analysis, with emphasis on the cumulative returns and the top-performing stock (NVIDIA).

4. **`images/`**:
   - Include any visualizations or charts you created during the analysis. Reference these in your results markdown files.

5. **`docs/`**:
   - **`project_overview.md`**:
     - Copy the "Project Overview" section from what I provided earlier.
   - **`business_task.md`**:
     - Copy the "Business Task" section into this document.

### How to Present Your Queries and Results

- In the **`queries/`** folder, include your raw SQL queries with comments that explain each step.
- In the **`results/`** folder, write detailed markdown files that show the output of your SQL queries, with explanations of the significance of each result.
- In the **`README.md`**, provide links to each section of the project, making it easy for viewers to navigate and understand your work.

### Example `README.md` Outline

```markdown
# Stock Market Analysis (2014-2017)

## Overview
This project analyzes stock market data from 2014 to 2017, focusing on data quality, trading volume, stock volatility, and investment opportunities. The analysis was performed using SQL on Google BigQuery.

## Repository Structure
- **`queries/`**: Contains SQL scripts used in the analysis.
- **`results/`**: Contains markdown files that document the findings and results.
- **`images/`**: Contains any visualizations or charts.
- **`docs/`**: Contains the project overview and business task documentation.

## Project Highlights
- **Date Range**: 2014-01-02 to 2017-12-29
- **Record Count**: 497,472
- **Best Performing Stock**: NVIDIA (NVDA) with a 1268% gain.

## How to Reproduce
1. Clone this repository.
2. Execute the SQL queries in the `queries/` folder against your dataset.
3. Review the results in the `results/` folder.

## Detailed Documentation
- [Project Overview](./docs/project_overview.md)
- [Business Task](./docs/business_task.md)
